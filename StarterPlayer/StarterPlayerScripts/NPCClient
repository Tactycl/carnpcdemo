-- Services

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

-- Variables

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

local NPCModels = ReplicatedStorage:WaitForChild("NPCModels")
local Modules = ReplicatedStorage:WaitForChild("Modules")
local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local NpcManager = require(Modules:WaitForChild("NpcManager"))
local GameSettings = require(Modules:WaitForChild("GameSettings"))
local Manager = NpcManager.new()

local updateAfterFrames = 5
local currentFrames = 0

-- Runtime

function CharacterAdded(char)
    Character = char
end

for _, node in Remotes.RequestNPCNodes:InvokeServer() do
    Manager:addNode(node.position, node.accessible, node.nodetype, node.connectedids, node.nodeid)
end

Manager.streamingRadius = GameSettings["NPC Render Distance"]
GameSettings.updateFunction = function()
    Manager.streamingRadius = GameSettings["NPC Render Distance"]
end

Manager:spawnRandomPedestrians(75)
RunService.Heartbeat:Connect(function()
    currentFrames += 1
    if currentFrames < updateAfterFrames then return end
    currentFrames = 0

    if not Character then return end
    local hrp = Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    Manager:updateActivity(hrp.Position)
    Manager:updatePedestrians()
end)
LocalPlayer.CharacterAdded:Connect(CharacterAdded)
